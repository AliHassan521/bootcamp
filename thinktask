class OrderProcessor {
    public void ProcessOrder(int orderId) {
        var order = Database.GetOrder(orderId);
        if (order.PaymentType == "CreditCard") {
            // process credit card
        } else if (order.PaymentType == "PayPal") {
            // process PayPal
        }
        Logger.Log("Order processed");
    }
}


AJAX Demo Application
This is a simple demonstration application showing how to use AJAX to fetch data from an external API. The application fetches user data from JSONPlaceholder's user API endpoint and displays it in a clean, responsive interface.

Features
Demonstrates AJAX using both XMLHttpRequest (traditional) and Fetch API (modern)
Shows loading indicators during data fetching
Handles errors gracefully
Responsive design that works on all device sizes
Technologies Used
HTML5
CSS3
JavaScript (vanilla, no frameworks)
API Used
JSONPlaceholder Users API: https://jsonplaceholder.typicode.com/users 
How to Use
Open index.html in a web browser
Click the "Fetch Users" button to load user data from the API
Click the "Clear" button to remove the displayed users
Educational Purpose
This demo is designed to help students understand:

How AJAX works
The difference between XMLHttpRequest and Fetch API
How to handle asynchronous operations
How to parse and display JSON data
Basic error handling in AJAX requests
Switching Between XMLHttpRequest and Fetch API
The demo uses XMLHttpRequest by default. To switch to the Fetch API implementation:

Open script.js
Find the line: fetchButton.addEventListener('click', fetchUsers);
Replace it with: fetchButton.addEventListener('click', fetchUsersWithFetchAPI);
This allows students to compare both approaches to making AJAX requests.
